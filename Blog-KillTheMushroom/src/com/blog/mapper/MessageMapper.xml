<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.dao.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.blog.model.Message" >
    <id column="messageId" property="messageId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="userId" property="userId" jdbcType="INTEGER" />
    <result column="messageTime" property="messageTime" jdbcType="TIMESTAMP" />
    <result column="freeze" property="freeze" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    messageId, content, userId, messageTime, freeze, sort
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from message
    where messageId = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from message
    where messageId = #{messageId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.model.Message" >
    insert into message (messageId, content, userId, 
      messageTime, freeze, sort
      )
    values (#{messageId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{messageTime,jdbcType=TIMESTAMP}, #{freeze,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blog.model.Message" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        messageId,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="messageTime != null" >
        messageTime,
      </if>
      <if test="freeze != null" >
        freeze,
      </if>
      <if test="sort != null" >
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="messageTime != null" >
        #{messageTime,jdbcType=TIMESTAMP},
      </if>
      <if test="freeze != null" >
        #{freeze,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.model.Message" >
    update message
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="messageTime != null" >
        messageTime = #{messageTime,jdbcType=TIMESTAMP},
      </if>
      <if test="freeze != null" >
        freeze = #{freeze,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where messageId = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.model.Message" >
    update message
    set content = #{content,jdbcType=VARCHAR},
      userId = #{userId,jdbcType=INTEGER},
      messageTime = #{messageTime,jdbcType=TIMESTAMP},
      freeze = #{freeze,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER}
    where messageId = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>