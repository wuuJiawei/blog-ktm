<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.blog.model.User" >
    <id column="userId" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="userType" property="userType" jdbcType="INTEGER" />
    <result column="headpic" property="headpic" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="lastLoginIp" property="lastLoginIp" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="registerTime" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="registerIp" property="registerIp" jdbcType="VARCHAR" />
    <result column="weibo" property="weibo" jdbcType="VARCHAR" />
    <result column="freeze" property="freeze" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, username, nickname, password, userType, headpic, phone, email, qq, address, 
    lastLoginIp, birthday, registerTime, registerIp, weibo, freeze, state
  </sql>
  
  <!-- 根据条件查询 -->
  <select id="selectAll" resultMap="BaseResultMap" parameterType="map">
  	select 
  	<include refid="Base_Column_List" />
  	from user 
  	<where>
  		<if test="username != null">
  		and username = #{username}
  		</if>
  		<if test="nickname != null and nickname != ''">
  		and nickname like '%${nickname}%'
  		</if>
  		<if test="password != null">
  		and password = #{password}
  		</if>
  	</where>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userId = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.model.User" >
    insert into user (userId, username, nickname, 
      password, userType, headpic, 
      phone, email, qq, address, 
      lastLoginIp, birthday, registerTime, 
      registerIp, weibo, freeze, 
      state)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, #{headpic,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{lastLoginIp,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{registerTime,jdbcType=TIMESTAMP}, 
      #{registerIp,jdbcType=VARCHAR}, #{weibo,jdbcType=VARCHAR}, #{freeze,jdbcType=INTEGER}, 
      #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        userId,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userType != null" >
        userType,
      </if>
      <if test="headpic != null" >
        headpic,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="lastLoginIp != null" >
        lastLoginIp,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="registerTime != null" >
        registerTime,
      </if>
      <if test="registerIp != null" >
        registerIp,
      </if>
      <if test="weibo != null" >
        weibo,
      </if>
      <if test="freeze != null" >
        freeze,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="headpic != null" >
        #{headpic,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null" >
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null" >
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null" >
        #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="freeze != null" >
        #{freeze,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.model.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        userType = #{userType,jdbcType=INTEGER},
      </if>
      <if test="headpic != null" >
        headpic = #{headpic,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null" >
        lastLoginIp = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="registerTime != null" >
        registerTime = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null" >
        registerIp = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null" >
        weibo = #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="freeze != null" >
        freeze = #{freeze,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.model.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      userType = #{userType,jdbcType=INTEGER},
      headpic = #{headpic,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      lastLoginIp = #{lastLoginIp,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      registerTime = #{registerTime,jdbcType=TIMESTAMP},
      registerIp = #{registerIp,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      freeze = #{freeze,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR}
    where userId = #{userId,jdbcType=INTEGER}
  </update>
</mapper>